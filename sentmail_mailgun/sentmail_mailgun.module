<?php

/**
 * Implements hook_menu().
 */
function sentmail_mailgun_menu() {
  $items['sentmail/api/mailgun'] = array(
    'title' => 'Setmail Mailgun Verify',
    'page callback' => 'sentmail_sentmail_mailgun_json_accept',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function sentmail_sentmail_mailgun_json_accept() {
  $post = _sentmail_mailgun_dev_store_json_post($_POST);
  $key = _sentmail_find_key($post['body-plain']);
  $status = _sentmail_mailgun_verify_key_status($key);

  /**
   * Uses HTTPRL to make an asynchronous POST call to the listserv.
   * Use 'print_r(httprl_pr($request))' to investigate the request.
   *
   * @todo Need to determine the $url with a regex
   */
  if ($status = 'active') {
    // $url = "http://lists.psu.edu/cgi-bin/wa?OK=F61E4971&L=L-ITCOMMTEST";
    $url = 'http://heymp/itnews';
    $options = array(
      'method' => 'POST',
      'blocking' => FALSE,
    );
    httprl_request($url, $options);
    // Execute requests.
    $request = httprl_send_request();

    watchdog('sentmail_mailgun', 'Listserv confirmation link posted to @url', array('@url' => $request[$url]->url), WATCHDOG_NOTICE, 'link');
  }
}

/**
 * This is for development purposes only. Should be deleted
 */
function _sentmail_mailgun_dev_store_json_post($post) {
  if ($post) {
    variable_set('sentmail_post', $post);
  }

  $mailgunmessage = variable_get('sentmail_post', 'nothing');

  return $mailgunmessage;
}

/**
 * Regexes a blob of text to find the verify key. This presumes that the verify
 * key is in between 'VKE:' and ':EVKE'
 *
 * @param  mixed   $haystack    The blob of text that contains the verify key.
 * @return string               The verify key.
 */
function _sentmail_find_key($haystack) {
  $subject = $haystack;
  $delimiter = '#';
  $startTag = 'VKE:';
  $endTag = ':EVKE';
  $regex = $delimiter . preg_quote($startTag, $delimiter)
                      . '(.*?)'
                      . preg_quote($endTag, $delimiter)
                      . $delimiter
                      . 's';
  preg_match($regex, $subject, $matches);

  return $matches[1];
}

/**
 * Checks the status of the verify key.
 * @param  string   $key      The Verify Key that we are looking up in the database
 * @return The status of the verify key. Generally will be either 'active' or 'inactive'
 */
function _sentmail_mailgun_verify_key_status($key) {
  $result = array();

  // Find instances of sentmail where the key is the same as $key
  $results = db_select('sentmail', 's')
    ->fields('s')
    ->condition('s.verifykey', $key,'=')
    ->execute();

  foreach ($results as $key => $value) {
    $result[] = $value;
  }

  // We know that there will only be one unique key so we can
  // target the first result.
  $status = $result[0]->verifykey_status;

  return $status;
}
